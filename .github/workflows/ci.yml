name: Continuous Integration Checks (Format, Lint, Build, Test)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20]

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # Step 4: Use Node.js and enable caching
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      # Step 5: Install dependencies
      - name: Install Dependencies
        run: pnpm install

      # Step 6: Run Lint
      - name: Run Lint
        run: pnpm lint

      # Step 7: Build Project
      - name: Build Project
        run: pnpm build

      # Step 8: Build Docker (only if needed)
      - name: Build Docker
        run: docker build -t potion-server .
        if: ${{ github.event_name == 'push' }}  # Only build on push, not PRs

      # Step 9: Run Unit Tests Silently
      - name: Run Unit Tests Silently
        run: pnpm test:silent

      # Step 10: Run Test Coverage (outputs coverage reports to each package's own build/logs folder)
      - name: Run Test Coverage
        run: pnpm coverage

      # Step 11: Merge Coverage Reports for Upload
      - name: Merge Coverage Reports
        run: |
          mkdir -p build/logs
          pnpx istanbul-merge --out coverage.json packages/**/build/logs/coverage-final.json
          npx istanbul report --include coverage.json --dir build/logs clover

      # Step 12: Upload Coverage 
      - name: Upload Coverage
        env:
          OTTERWISE_TOKEN: ${{ secrets.OTTERWISE_TOKEN }}
        run: bash <(curl -s https://raw.githubusercontent.com/getOtterWise/bash-uploader/main/uploader.sh) --repo-token "$OTTERWISE_TOKEN"